{"version":3,"sources":["img/search-icon.svg","img/movie-icon.svg","Components/Header/Header.js","Components/MovieComponent/MovieComponent.js","Components/MovieInfoComponent/MovieInfoComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","MovieIcon","alt","SearchIcon","value","values","onChange","textChange","type","placeholder","MovieComponent","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","axios","get","API_KEY","then","response","data","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","App","searchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updateMovieList","fetchData","searchString","a","Axios","Search","event","clearTimeout","target","timeout","setTimeout","length","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fab8830.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search-icon.077696d4.svg\";","export default __webpack_public_path__ + \"static/media/movie-icon.1e64a77b.svg\";","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"../../img/search-icon.svg\";\nimport MovieIcon from \"../../img/movie-icon.svg\";\n\nfunction Header(props) {\n\n  return (\n    <div className=\"header\">\n      <div className=\"left\">\n        <img className=\"movieIcon\" src={MovieIcon} alt=\"photos\"/>\n        <span className=\"header-name\">React Movie App</span>\n      </div>\n      <div className=\"search-bar\">\n        <img src={SearchIcon} alt=\"search-icon\" />\n        <input\n        value={props.values}\n           onChange={props.textChange}\n          className=\"search-box\"\n          type=\"text\"\n          src={SearchIcon}\n          placeholder=\"Search Movie\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport './MovieComponent.css'\n\n\nconst MovieComponent = (props) => {\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\n\n  return (\n    <div onClick={()=>{props.onMovieSelect(imdbID);}} className=\"MovieContainer\" >\n        <img className=\"CoverImage\" src={Poster} alt=\"ggg\"/>\n        <span className=\"MovieName\">{Title}</span>\n        <div className=\"InfoColumn\">\n            <span className=\"MovieInfo\"> Year : {Year}</span>\n            <span className=\"MovieInfo\">Type: {Type}</span>\n\n        </div>\n\n    </div>\n  );\n};\nexport default MovieComponent;\n\n\n\n\n\n\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport \"./MovieInfoComponent.css\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../../App\";\n\nconst MovieInfoComponent = (props) => {\n  \n  const [movieInfo, setMovieInfo] = useState();\n  const { selectedMovie } = props;\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`)\n      .then((response) => setMovieInfo(response.data));\n  }, [selectedMovie]);\n\n\n  return (\n    <div className=\"MovieInfoContainers\">\n      {movieInfo?<> \n      <img className=\"CoverImages\" src={movieInfo?.Poster} alt=\"ggg\" />\n      <div className=\"InfoColumns\">\n        <span className=\"MovieNames\">Movie : {movieInfo?.Title}</span>  \n        <span className=\"Infos\">\n          IMDB Rating: {movieInfo?.imdbRating}\n        </span>\n        <span className=\"Infos\">\n          Year: <span className=\"spn\"></span>{movieInfo?.Year}\n        </span>\n        <span className=\"Infos\">\n          Language: <span className=\"spn\">{movieInfo?.Language}</span>\n        </span>\n        <span className=\"Infos\">\n          Rated: <span className=\"spn\"> {movieInfo?.Rated}</span>\n        </span>\n        <span className=\"Infos\">\n          Release: <span className=\"spn\">{movieInfo?.Released}</span>\n        </span>\n        <span className=\"Infos\">\n          Runtime: <span className=\"spn\">{movieInfo?.Runtime}</span>\n        </span>\n        <span className=\"Infos\">\n          Genre: <span className=\"spn\">{movieInfo?.Genre}</span>\n        </span>\n        <span className=\"Infos\">\n          Director: <span className=\"spn\">{movieInfo?.Director}</span>\n        </span>\n        <span className=\"Infos\">\n          Actors: <span className=\"spn\">{movieInfo?.Actors}</span>\n        </span>\n        <span className=\"Infos\">\n          Plot: <span className=\"spn\">{movieInfo?.Plot}</span>\n        </span>\n      </div>\n      <div onClick={()=>props.onMovieSelect()}  className=\"colseBtn\">X</div>\n      </> : \"Loading...\"}\n    </div>\n  );\n};\nexport default MovieInfoComponent;\n","import \"./App.css\";\nimport Header from \"./Components/Header/Header\";\nimport MovieComponent from \"./Components/MovieComponent/MovieComponent\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport MovieIcon from \"./img/movie-icon.svg\";\nimport MovieInfoComponent from \"./Components/MovieInfoComponent/MovieInfoComponent\";\n\nexport const API_KEY = \"eeba0f9a\";\n\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState();\n  const [timeoutId, updateTimeoutId] = useState();\n  const [movieList, updateMovieList] = useState();\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`\n    );\n\n    updateMovieList(response.data.Search);\n  };\n\n  const onTextChange = (event) => {\n    clearTimeout(timeoutId);\n    updateSearchQuery(event.target.value);\n    const timeout = setTimeout(() => fetchData(event.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header textChange={onTextChange} values={searchQuery} />\n      {selectedMovie && (\n        <MovieInfoComponent\n          selectedMovie={selectedMovie}\n          onMovieSelect={onMovieSelect}\n        />\n      )}\n      <div className=\"ComponentAlignment\">\n        {movieList?.length ? (\n          movieList.map((movie, index) => (\n            <MovieComponent\n              key={index}\n              movie={movie}\n              onMovieSelect={onMovieSelect}\n            />\n          ))\n        ) : ( <div className=\"homeInfo\">\n             <img className=\"homeIcon\"  src={MovieIcon} alt=\"icon\"/>\n             <h3>Please Start Searching For Movies...</h3>\n             </div>) \n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}